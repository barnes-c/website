name: ci

on:
  push:
    branches: [main]
    tags: ["*"]
  pull_request:
    branches: [main]

env:
  APP_NAME: website
  IMAGE: ghcr.io/${{ github.repository }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.3

      - name: Install
        run: bun install --no-progress

      - name: Lint
        run: bun run lint

      - name: Typecheck
        run: bun run typecheck

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v5

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.3

      - name: Install
        run: bun install --no-progress

      - name: Test
        run: bun run test

      - name: Build
        run: bun run build

      - name: Upload dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist
          if-no-files-found: error

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Download dist artifact
        uses: actions/download-artifact@v5
        with:
          name: dist
          path: dist

      - name: Create ZIP
        run: |
          zip -r "${{ env.APP_NAME }}-${{ github.ref_name }}.zip" dist

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ env.APP_NAME }}-${{ github.ref_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  package_pr:
    if: github.event_name == 'pull_request'
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      IMAGE: ghcr.io/${{ github.repository }}
    steps:
      - uses: actions/checkout@v5
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Compute image
        id: meta
        run: echo "image=ghcr.io/${GITHUB_REPOSITORY,,}" >> "$GITHUB_OUTPUT"

      # same-repo PRs only
      - name: Login to GHCR
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Short SHA
        id: vars
        run: echo "short_sha=${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"

      # Build always. Push only if login ran.
      - name: Build multi-arch (PR)
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
          tags: |
            ${{ steps.meta.outputs.image }}:sha-${{ steps.vars.outputs.short_sha }}
            ${{ steps.meta.outputs.image }}:pr-${{ github.event.number }}
          build-args: |
            BUILD_TIMESTAMP=${{ github.event.pull_request.updated_at }}
            COMMIT_HASH=${{ steps.vars.outputs.short_sha }}
            VERSION=pr-${{ github.event.number }}

  package_release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v5
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push multi-arch (tag)
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.IMAGE }}:latest
            ${{ env.IMAGE }}:${{ github.ref_name }}
          build-args: |
            BUILD_TIMESTAMP=${{ github.event.repository.updated_at }}
            COMMIT_HASH=${{ github.sha }}
            VERSION=${{ github.ref_name }}
