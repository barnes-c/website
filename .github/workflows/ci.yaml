name: ci

on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request:
    branches: [main]

env:
  APP_NAME: website

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.3

      - name: Install
        run: bun install --no-progress

      - name: Lint
        run: bun run lint

      - name: Typecheck
        run: bun run typecheck

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v5

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.3

      - name: Install
        run: bun install --no-progress

      - name: Test
        run: bun run test

      - name: Build
        run: bun run build

      - name: Upload dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist
          if-no-files-found: error

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Download dist artifact
        uses: actions/download-artifact@v5
        with:
          name: dist
          path: dist

      - name: Create ZIP
        run: |
          zip -r "${{ env.APP_NAME }}-${{ github.ref_name }}.zip" dist

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ env.APP_NAME }}-${{ github.ref_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  package:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v5

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute tags
        id: tags
        run: |
          T="${{ env.IMAGE }}:latest"
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            V="${GITHUB_REF#refs/tags/}"
            echo "tags=$T,${{ env.IMAGE }}:${V}" >> $GITHUB_OUTPUT
          else
            echo "tags=$T" >> $GITHUB_OUTPUT
          fi

      - uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.tags.outputs.tags }}
          build-args: |
            BUILD_TIMESTAMP=${{ github.event.repository.updated_at }}
            COMMIT_HASH=${{ github.sha }}
            VERSION=${{ github.ref_name }}
